@name Force Gun
@inputs Charge
@outputs ReloadTime ChargeLevel
@persist ChargeLevel ChargeTime Entities:array ShockwaveMDL:string AreaMDL:string EffectMat:string ShockwaveMat:string Size Ready I Fire Find PowerOn
@model models/sprops/misc/tubes/size_2/tube_24x30.mdl
interval(100)
if(first()){
    ChargeTime=50
    ShockwaveMDL="models/hunter/misc/shell2x2a.mdl"
    AreaMDL="models/hunter/misc/cone1x1.mdl"
    EffectMat="models/debug/debugwhite"
    EffectColor=vec(0,200,255)
    ShockwaveMat="models/debug/debugwhite"
    ShockwaveColor=vec(200)
    Size=1.5
    Ready=0
    Find=0
    holoCreate(1)
    holoCreate(2)
    holoModel(1,AreaMDL)
    holoModel(2,ShockwaveMDL)
    holoMaterial(1,EffectMat)
    holoMaterial(2,ShockwaveMat)
    holoPos(1,entity():toWorld(vec(0,150*Size,0)))
    holoPos(2,entity():toWorld(vec(0,24,0)))
    holoScale(1,vec(3,3,3)*Size)
    holoScale(2,vec(0))
    holoAng(1,entity():toWorld(ang(90,-90,0)))
    holoAng(2,entity():toWorld(ang(90,90,0)))
    holoColor(1,EffectColor)
    holoColor(2,ShockwaveColor)
    holoParent(1,entity())
    holoParent(2,entity())
    holoDisableShading(1,1)
    holoDisableShading(2,1)
    timer("stop",300)
    
    #model
    
    holoCreate(3)
    holoModel(3,"models/props_vehicles/tire001a_tractor.mdl")
    holoMaterial(3,"")
    holoPos(3,entity():toWorld(vec(0,7,0)))
    holoAng(3,entity():toWorld(ang(0,90,0)))
    holoParent(3,entity())
    holoScale(3,vec(2.5,1,1)*0.5)
    
    holoCreate(4)
    holoModel(4,"models/props_vehicles/apc_tire001.mdl")
    holoMaterial(4,"")
    holoPos(4,entity():toWorld(vec(0,10,0)))
    holoAng(4,entity():toWorld(ang(0,90,0)))
    holoParent(4,entity())
    holoScale(4,vec(2,1.5,1.5)*0.5)
}
if(changed(Charge)&Charge){
PowerOn=1
timer("readytoshoot",500)
}
if(clk("readytoshoot")){
    PowerOn=0
}
if(PowerOn){
if(ChargeLevel<100){
    ChargeLevel=ChargeLevel+100/ChargeTime
    holoAlpha(1,255/100*5)
    holoAlpha(2,255/100*5)
    if(Find==0){
    timer("check",100)
    if(clk("check")){
        Find=1
        #findInCone(pos,dir,length,degree)
        findExcludeEntity(entity())
        findIncludeClass("prop_*")
        findInCone(entity():toWorld(vec(0,0,0)),-entity():right(),200+450*ChargeLevel/100,35)
        Entities=findToArray()
    }
    }
    foreach(I,E:entity=Entities){
        E:applyForce(vec(0,0,(E:mass()*15)))
        E:applyAngForce(ang(randint(-125,125),randint(-125,125),randint(-125,125)))
        E:propGravity(0)
        E:propInertia(vec(0))
    }
}
Ready=1
}
if(!PowerOn){
if(Ready==1){
    timer("fire",100)
    Ready=0
    Fire=1
}
}
if(clk("fire")){
    foreach(I,E:entity=Entities){
        E:applyForce((-((entity():pos()-E:pos()):normalized())*ChargeLevel)*E:mass()*100)
        E:propGravity(600)
    }
    holoAlpha(1,0)
    timer("stop",300)
}
if(clk("stop")){
    holoAlpha(1,0)
    ChargeLevel=0
    Fire=0
    Find=0
}
if(Fire){
    I=I+0.3*3
    holoScale(2,vec(I,I,I))
    holoAlpha(2,255/100*5)
}else{
    I=0
    holoScale(2,vec(0))
    holoAlpha(2,0)
}
if(dupefinished()){
    reset()
}
